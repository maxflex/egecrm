// Generated by CoffeeScript 1.9.3
angular.module("Clients", []).filter('to_trusted', [
  '$sce', function($sce) {
    return function(text) {
      return $sce.trustAsHtml(text);
    };
  }
]).controller("ListCtrl", function($scope) {
  $scope.weekdays = [
    {
      "short": "ПН",
      "full": "Понедельник",
      "schedule": ["", "", "16:15", "18:40"]
    }, {
      "short": "ВТ",
      "full": "Вторник",
      "schedule": ["", "", "16:15", "18:40"]
    }, {
      "short": "СР",
      "full": "Среда",
      "schedule": ["", "", "16:15", "18:40"]
    }, {
      "short": "ЧТ",
      "full": "Четверг",
      "schedule": ["", "", "16:15", "18:40"]
    }, {
      "short": "ПТ",
      "full": "Пятница",
      "schedule": ["", "", "16:15", "18:40"]
    }, {
      "short": "СБ",
      "full": "Суббота",
      "schedule": ["11:00", "13:30", "16:00", "18:30"]
    }, {
      "short": "ВС",
      "full": "Воскресенье",
      "schedule": ["11:00", "13:30", "16:00", "18:30"]
    }
  ];
  $scope.inFreetime = function(time, Group, day) {
    var freetime;
    if (Group.freetime === void 0 || Group.freetime === null) {
      return false;
    }
    if (Group.freetime[Group.id_branch] === void 0) {
      if (Group.freetime[0] === void 0) {
        return false;
      }
      freetime = Group.freetime[0];
    } else {
      freetime = Group.freetime[Group.id_branch];
    }
    return $.inArray(time, freetime[day]) >= 0;
  };
  $scope.inRedFreetime = function(time, Group, day) {
    if (Group.freetime_red === null) {
      return false;
    }
    return $.inArray(time, Group.freetime_red[day]) >= 0;
  };
  $scope.justInDayFreetime = function(day, time, freetime) {
    if (freetime === void 0 || freetime === null) {
      return false;
    }
    freetime[day] = objectToArray(freetime[day]);
    console.log(day, time, freetime[day], $.inArray(time, freetime[day]) >= 0);
    return $.inArray(time, freetime[day]) >= 0;
  };
  $scope.justInDayFreetimeObject = function(day, time, freetime) {
    if (freetime === void 0 || freetime === null || freetime[day] === void 0 || freetime[day] === null) {
      return false;
    }
    freetime[day] = objectToArray(freetime[day]);
    return $.inArray(time, freetime[day]) >= 0;
  };
  $scope.getScore = function(subjects) {
    var ar;
    ar = [];
    $.each(subjects, function(i, v) {
      if (v.score !== null && v.score !== "") {
        return ar.push(v.score);
      }
    });
    return ar.join(" + ");
  };
  $scope.filter_cancelled = 0;
  $scope.order = 2;
  $scope.setOrder = function(order) {
    console.log(order, $scope.asc);
    if ($scope.order !== order) {
      $scope.order = order;
      return $scope.asc = true;
    } else {
      return $scope.asc = !$scope.asc;
    }
  };
  $scope.asc = true;
  $scope.orderStudents = function() {
    switch ($scope.order) {
      case 1:
        return 'last_name';
      case 2:
        return 'Contract.id';
      default:
        return 'date_formatted';
    }
  };
  $scope.getSubjectsCount = function(Contract) {
    if (Contract.subjects) {
      return Object.keys(Contract.subjects).length;
    } else {
      return 0;
    }
  };
  return angular.element(document).ready(function() {
    return set_scope("Clients");
  });
});
