// Generated by CoffeeScript 1.9.3
angular.module("Stats", ["ui.bootstrap"]).config([
  '$compileProvider', function($compileProvider) {
    $compileProvider.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|chrome-extension|sip):/);
  }
]).filter('to_trusted', [
  '$sce', function($sce) {
    return function(text) {
      return $sce.trustAsHtml(text);
    };
  }
]).controller("ListCtrl", function($scope) {
  $scope.round1 = function(n) {
    return Math.round(n);
  };
  $scope.round2 = function(n) {
    return Math.round(n / 1000) * 1000;
  };
  $scope.goDates = function() {
    var date_end, date_start;
    ajaxStart();
    date_start = $("#date-start").val();
    date_end = $("#date-end").val();
    return redirect("stats/users?date_start=" + date_start + "&date_end=" + date_end);
  };
  $scope.pageChanged = function() {
    ajaxStart();
    return redirect("stats/?page=" + $scope.currentPage);
  };
  $scope.pageStudentChanged = function() {
    ajaxStart();
    return redirect("stats/visits/total?page=" + $scope.currentPage);
  };
  $scope.pagePaymentChanged = function() {
    ajaxStart();
    return redirect("stats/payments?page=" + $scope.currentPage);
  };
  $scope.Schedules = {};
  $scope.dateLoad = function(date) {
    if (!$scope.days_mode) {
      return false;
    }
    $("#" + date).toggle();
    if ($scope.Schedules[date] === void 0) {
      return $.post("ajax/loadStatsSchedule", {
        date: date
      }, function(response) {
        var d1, d2, i, j, len, len1;
        for (i = 0, len = response.length; i < len; i++) {
          d1 = response[i];
          if (!d1.layered && !d1.cancelled) {
            for (j = 0, len1 = response.length; j < len1; j++) {
              d2 = response[j];
              if ((d1.id !== d2.id) && (d1.time === d2.time) && (d1.id_branch === d2.id_branch) && (d1.cabinet === d2.cabinet) && !d2.cancelled) {
                d1.cabinetLayered = true;
                d2.cabinetLayered = true;
              }
            }
          }
        }
        $scope.Schedules[date] = response;
        return $scope.$apply();
      }, "json");
    }
  };
  $scope.sipNumber = function(number) {
    number = number.toString();
    return "sip:" + number.replace(/[^0-9]/g, '');
  };
  $scope.callSip = function(number) {
    number = $scope.sipNumber(number);
    return location.href = number;
  };
  $scope.clickControl = function(Teacher, event) {
    if (event.shiftKey) {
      return $scope.callSip(Teacher.phone);
    } else {
      return redirect("teachers/edit/" + Teacher.id);
    }
  };
  $scope.day = 0;
  $scope.plusDays = function() {
    return $.post("ajax/plusDays", {
      day: $scope.day++
    }, function(response) {
      console.log(response);
      $.each(response, function(date, stat) {
        return $scope.stats[date] = stat;
      });
      return $scope.$apply();
    }, "json");
  };
  $scope.formatDate = function(date) {
    return moment(date).format("D MMM. YYYY");
  };
  $scope.sortByDate = function(stats) {
    var tmp;
    tmp = [];
    $.each(stats, function(date, obj) {
      obj.date = date;
      return tmp.push(obj);
    });
    return _.sortBy(tmp, 'date').reverse();
  };
  $scope.formatDay = function(day) {
    return $scope.weekdays[day].short;
  };
  $scope.toggleDiv = function(id) {
    return $(".user-" + id).slideToggle();
  };
  $scope.isFutureLesson = function(Schedule) {
    var time_lesson, time_now;
    time_now = new Date().getTime();
    time_lesson = new Date(Schedule.date + " " + Schedule.time).getTime();
    return time_lesson > time_now;
  };
  $scope.isMissingLesson = function(Schedule) {
    var time_difference_minutes, time_lesson, time_now;
    if (Schedule.was_lesson || $scope.isFutureLesson(Schedule) || Schedule.cancelled) {
      return false;
    }
    time_now = new Date().getTime();
    time_lesson = new Date(Schedule.date + " " + Schedule.time).getTime();
    time_difference_minutes = Math.round((time_now - time_lesson) / 1000 / 60);
    console.log("Group " + Schedule.id_group, time_difference_minutes, new Date(), new Date(Schedule.date + " " + Schedule.time), time_now, time_lesson);
    if (time_difference_minutes >= 165) {
      return true;
    }
  };
  return angular.element(document).ready(function() {
    return set_scope("Stats");
  });
});
