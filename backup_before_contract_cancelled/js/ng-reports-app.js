// Generated by CoffeeScript 1.9.3
angular.module("Reports", []).filter('to_trusted', [
  '$sce', function($sce) {
    return function(text) {
      return $sce.trustAsHtml(text);
    };
  }
]).filter('range', function() {
  return function(input, total) {
    var i, j, ref;
    total = parseInt(total);
    for (i = j = 1, ref = total + 1; j < ref; i = j += 1) {
      input.push(i);
    }
    return input;
  };
}).controller("UserListCtrl", function($scope) {
  return angular.element(document).ready(function() {
    set_scope("Reports");
    $scope.list = 1;
    $scope.$watch('list', function(newValue, oldValue) {
      if (newValue === 2) {
        if ($scope.SentReports === void 0) {
          $.post("reports/AjaxGetReports", {
            available_for_parents: 1
          }, function(response) {
            $scope.SentReports = response;
            $scope.SelectedReports = $scope.SentReports;
            return $scope.$apply();
          }, "json");
        }
        return $scope.SelectedReports = $scope.SentReports;
      } else {
        return $scope.SelectedReports = $scope.NotSentReports;
      }
    });
    return $.post("reports/AjaxGetReports", {
      available_for_parents: 0
    }, function(response) {
      $scope.NotSentReports = response;
      $scope.SelectedReports = $scope.NotSentReports;
      return $scope.$apply();
    }, "json");
  });
}).controller("ListCtrl", function($scope) {
  $scope.getReports = function(id_student) {
    return _.where($scope.Reports, {
      id_student: id_student
    });
  };
  $scope.getSubjects = function(Visits) {
    return Object.keys(Visits);
  };
  $scope.noReports = function(Visits) {
    var has_reports;
    if (Visits === false || !Visits.length) {
      return true;
    }
    has_reports = false;
    $.each(Visits, function(index, Visit) {
      if (Visit.hasOwnProperty('id_student')) {
        has_reports = true;
      }
    });
    return !has_reports;
  };
  $scope.formatDate = function(date) {
    return moment(date).format("DD.MM.YY");
  };
  $scope.isReport = function(Report) {
    return Report.hasOwnProperty('homework_grade');
  };
  $scope.getByGrade = function(grade, id_group) {
    return _.where($scope.Students, {
      grade: grade,
      id_group: id_group
    });
  };
  return angular.element(document).ready(function() {
    $scope.weekdays = [
      {
        "short": "ПН",
        "full": "Понедельник",
        "schedule": ["", "", $scope.time[1], $scope.time[2]]
      }, {
        "short": "ВТ",
        "full": "Вторник",
        "schedule": ["", "", $scope.time[1], $scope.time[2]]
      }, {
        "short": "СР",
        "full": "Среда",
        "schedule": ["", "", $scope.time[1], $scope.time[2]]
      }, {
        "short": "ЧТ",
        "full": "Четверг",
        "schedule": ["", "", $scope.time[1], $scope.time[2]]
      }, {
        "short": "ПТ",
        "full": "Пятница",
        "schedule": ["", "", $scope.time[1], $scope.time[2]]
      }, {
        "short": "СБ",
        "full": "Суббота",
        "schedule": [$scope.time[3], $scope.time[4], $scope.time[5], $scope.time[6]]
      }, {
        "short": "ВС",
        "full": "Воскресенье",
        "schedule": [$scope.time[3], $scope.time[4], $scope.time[5], $scope.time[6]]
      }
    ];
    setTimeout(function() {
      return $scope.$apply();
    }, 50);
    return set_scope("Reports");
  });
}).controller("AddCtrl", function($scope) {
  var textareasHaveErrors;
  $scope.setGrade = function(prop, n) {
    $scope.form_changed = true;
    if (!$scope.Report[prop] || $scope.Report[prop] !== n) {
      return $scope.Report[prop] = n;
    } else {
      return $scope.Report[prop] = 0;
    }
  };
  $scope.countSymbols = function(text) {
    if (!text || text.length <= 0) {
      return;
    }
    return text.length;
  };
  $scope.deleteReport = function() {
    return bootbox.confirm("Вы уверены, что хотите удалить отчет №" + $scope.Report.id + "?", function(result) {
      if (result === true) {
        ajaxStart();
        return $.post("reports/ajaxDelete", {
          id_report: $scope.Report.id
        }, function() {
          return history.back();
        });
      }
    });
  };
  $scope.with_email = true;
  $scope.addReport = function(with_email) {
    if (textareasHaveErrors()) {
      return;
    }
    ajaxStart();
    $scope.adding = true;
    return $.post("reports/ajaxAdd", {
      Report: $scope.Report,
      with_email: with_email
    }, function(response) {
      console.log(response);
      return history.back();
    }, "json");
  };
  $scope.sendReport = function() {
    return bootbox.confirm("Отправить отчет родителю?", function(result) {
      if (result === true) {
        ajaxStart();
        return $.post("reports/ajaxSendEmail", {
          Report: $scope.Report
        }, function(response) {
          ajaxEnd();
          $scope.Report.email_sent = true;
          $scope.Report.date_sent = response;
          return $scope.$apply();
        }, "json");
      }
    });
  };
  $scope.formatDate = function(date) {
    return moment(date).format("DD.MM.YY");
  };
  $scope.formatDate2 = function(date) {
    var D;
    date = date.split(".");
    date = date.reverse();
    date = date.join("-");
    D = new Date(date);
    return moment(D).format("D MMMM YYYY года");
  };
  $scope.editReport = function() {
    if (textareasHaveErrors()) {
      return;
    }
    ajaxStart();
    $scope.saving = true;
    return $.post("reports/ajaxEdit", {
      Report: $scope.Report
    }, function(response) {
      ajaxEnd();
      $scope.form_changed = false;
      $scope.saving = false;
      $scope.$apply();
      return console.log(response);
    });
  };
  textareasHaveErrors = function() {
    var has_errors;
    if ($(".teacher-rating.active").length < 5) {
      notifyError('Не все оценки не установлены!');
      return true;
    }
    has_errors = false;
    $(".teacher-review-textarea").each(function(i, element) {
      if ($(element).val().length < 10) {
        $(element).focus().addClass("has-error");
        notifyError('Комментарий должен быть длиннее 10 символов');
        has_errors = true;
        return false;
      } else {
        return $(element).removeClass("has-error");
      }
    });
    return has_errors;
  };
  return angular.element(document).ready(function() {
    $(".form-change-control").on('keyup change', 'input, select, textarea', function() {
      $scope.form_changed = true;
      return $scope.$apply();
    });
    return set_scope("Reports");
  });
});
