<?php	// Контроллер	class SearchController extends Controller	{		public $defaultAction = "search";		// Папка вьюх		protected $_viewsFolder	= "search";		/**		 * Поиск.		 *		 */		public function actionSearch()		{			extract($_POST);			$this->setTabTitle("Рультаты поиска по запросу «". $text. "»");			$this->addJs("ng-search-app");			# если пустой запрос			$text = trim($text);			if (empty($text)) {				$this->render("no_results");				return;			}			$table = Student::$mysql_table;//			error_reporting(E_ALL);//			ini_set("display_errors", 1);			self::_generateCondition($table, $text, [					"first_name", "last_name", "middle_name", "email", "phone", "phone2", "phone3"			], $sql);			self::_generateCondition(Passport::$mysql_table, $text, [					"series", "number", "issued_by", "address"			], $sql);			self::_generateCondition(Representative::$mysql_table, $text, [					"status", "first_name", "last_name", "middle_name", "email", "phone", "phone2", "phone3", "address"			], $sql);			self::_generateCondition(Request::$mysql_table, $text, [					"name", "comment", "phone", "phone2", "phone3"			], $sql);			self::_generateCondition(Comment::$mysql_table, $text, [					"comment"			], $sql);			$search_condition = implode(" OR ", $sql);			$search_results = dbConnection()->query("				SELECT $table.id FROM $table				 LEFT	JOIN ". Representative::$mysql_table 	." on ". Representative::$mysql_table .".id = $table.id_representative				 LEFT	JOIN ". Request::$mysql_table 				." on				 (". Request::$mysql_table .".id_student = $table.id AND ". Request::$mysql_table .".adding = 0)				 LEFT	JOIN ". Comment::$mysql_table 				." on				 (				 	(". Comment::$mysql_table . ".id_place = $table.id AND ". Comment::$mysql_table .".place = 'STUDENT')						OR				 	(". Comment::$mysql_table . ".id_place = ". Request::$mysql_table .".id AND ". Comment::$mysql_table .".place = 'REQUEST')				)				 LEFT	JOIN ". Passport::$mysql_table 				." on				 (				 	(". Passport::$mysql_table . ".id = $table.id_passport)						OR					(". Passport::$mysql_table . ".id = ". Representative::$mysql_table .".id_passport)				)				WHERE $search_condition				GROUP BY $table.id			");			while ($row = $search_results->fetch_row()) {				$student_ids[] = $row[0];			}			$Students = Student::findAll([				"condition" => "id IN (". implode(",", $student_ids) .")"			]);			if (!$Students) {				$this->render("no_results");			} else {				$this->render("results", [					"Students" => $Students,				]);			}		}		private function _generateCondition($table, $text, $search_fields, &$sql)		{			foreach ($search_fields as &$search_field) {				$search_field = $table . "." . $search_field;			}			foreach ($search_fields as $search_field) {				$sql[] = "CONVERT($search_field USING utf8) LIKE '%$text%'";			}		}		##################################################		###################### AJAX ######################		##################################################	}